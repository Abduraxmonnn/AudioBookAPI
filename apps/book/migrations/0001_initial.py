# Generated by Django 5.1.2 on 2024-10-11 06:28

import django.core.validators
import django.db.models.deletion
import django_extensions.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('author', '0001_initial'),
        ('category', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created',
                 django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified',
                 django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('title', models.CharField(max_length=255, unique=True)),
                ('rate', models.FloatField(validators=[django.core.validators.MinValueValidator(0.1),
                                                       django.core.validators.MaxValueValidator(5.0)])),
                ('summary', models.TextField(max_length=3000, unique=True)),
                ('isbn', models.CharField(max_length=13, unique=True,
                                          validators=[django.core.validators.MinLengthValidator(13)])),
                ('pages_count', models.PositiveSmallIntegerField(
                    help_text='Total number of pages in the ebook (must be between 1 and 1000)',
                    validators=[django.core.validators.MinValueValidator(1),
                                django.core.validators.MaxValueValidator(1000)])),
                ('poster_url', models.URLField(blank=True, null=True)),
                ('cover_url', models.URLField(blank=True, null=True)),
                ('ebook_url', models.URLField(blank=True, null=True)),
                ('poster', models.FileField(blank=True, null=True, upload_to='audiobooks/posters/')),
                ('cover', models.FileField(blank=True, null=True, upload_to='audiobooks/covers/')),
                ('ebook', models.FileField(blank=True, null=True, upload_to='audiobooks/ebooks/')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books',
                                             to='author.author')),
                ('categories', models.ManyToManyField(related_name='books', to='category.category')),
            ],
            options={
                'get_latest_by': 'modified',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created',
                 django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, verbose_name='created')),
                ('modified',
                 django_extensions.db.fields.ModificationDateTimeField(auto_now=True, verbose_name='modified')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1),
                                                                        django.core.validators.MaxValueValidator(5)])),
                ('comment', models.TextField(blank=True, max_length=1000, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews',
                                           to='book.book')),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
    ]
